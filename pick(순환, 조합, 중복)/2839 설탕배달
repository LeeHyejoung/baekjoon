#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

int min;
int flag;

void pick(int n, int* bucket, int bucketSize, int toPick, int* items, int goal);

int main(void)
{
	int items[2] = { 5, 3 };
	int* bucket;
	int n;

	scanf("%d", &n);
	bucket = (int*)malloc(sizeof(int) * (n / 3));

	min = n / 3;
	flag = -1;
	pick(2, bucket, n / 3, n / 3, items, n);

	if (flag == 1)
		printf("%d\n", min);
	else
		printf("%d\n", flag);

	free(bucket);

	return 0;
}

void pick(int n, int* bucket, int bucketSize, int toPick, int* items, int goal) {
	int lastIndex, smallest, i;
	int sum = 0;
	int temp;

	if (toPick == 0) {
		for (i = 0; i < bucketSize; i++) {
			sum += items[bucket[i]];
		}
		if (sum == goal) {
			flag = 1;
			if (bucketSize < min) {
				min = bucketSize;
			}

		}

		return;
	}
	else {
		lastIndex = bucketSize - toPick - 1;

		sum = 0;
		for (i = 0; i <= lastIndex; i++) {
			sum += items[bucket[i]];
		}
		if (sum == goal) {
			temp = lastIndex + 1;
			if (temp < min)
				min = temp;
			flag = 1;
		}
		else if (sum > goal) {
			return;
		}

		if (toPick == bucketSize) {
			smallest = 0;
		}
		else {
			smallest = bucket[lastIndex];
		}

		for (i = smallest; i < n; i++) {
			bucket[lastIndex + 1] = i;
			pick(n, bucket, bucketSize, toPick - 1, items, goal);
		}
	}
}
