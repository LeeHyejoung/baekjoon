#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

int compare(const int* a, int* b) {
	if (*a > *b) {
		return 1;
	}
	else {
		return -1;
	}
}

void pick(int n, int* bucket, int bucketSize, int toPick, int* items);

int main(void)
{
	int n, m;
	int* bucket, * items;
	int i;

	scanf("%d %d", &n, &m);

	bucket = (int*)malloc(sizeof(int) * m);
	items = (int*)malloc(sizeof(int) * n);

	for (i = 0; i < n; i++) {
		scanf("%d", &items[i]);
	}

	qsort(items, n, sizeof(int), compare);

	pick(n, bucket, m, m, items);

	free(bucket);
	free(items);

	return 0;
}

void pick(int n, int* bucket, int bucketSize, int toPick, int* items) {
	int i, j, lastIndex, flag;

	if (toPick == 0) {
		for (i = 0; i < bucketSize; i++) {
			printf("%d ", items[bucket[i]]);
		}
		printf("\n");

		return;
	}
	else {
		lastIndex = bucketSize - toPick - 1;

		for (i = 0; i < n; i++) {
			flag = 0;
			for (j = 0; j <= lastIndex; j++) {
				if (bucket[j] == i) {
					flag = 1;
					break;
				}
			}

			if (flag == 0) {
				bucket[lastIndex + 1] = i;
				pick(n, bucket, bucketSize, toPick - 1, items);
			}
		}
	}
}
