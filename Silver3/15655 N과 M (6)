#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

int compare(const int* a, int* b) {
	if (*a > *b) {
		return 1;
	}
	else {
		return -1;
	}
}

void pick(int n, int* bucket, int bucketSize, int toPick, int* items);

int main(void)
{
	int n, m;
	int *items, * bucket;
	int i;

	scanf("%d %d", &n, &m);

	items = (int*)malloc(sizeof(int) * n);
	bucket = (int*)malloc(sizeof(int) * m);

	for (i = 0; i < n; i++) {
		scanf("%d", &items[i]);
	}

	qsort(items, n, sizeof(int), compare);

	pick(n, bucket, m, m, items);

	free(items);
	free(bucket);

	return 0;
}

void pick(int n, int* bucket, int bucketSize, int toPick, int* items) {
	int i, smallest, lastIndex;

	if (toPick == 0) {
		for (i = 0; i < bucketSize; i++) {
			printf("%d ", items[bucket[i]]);
		}
		printf("\n");

		return;
	}
	else {
		lastIndex = bucketSize - toPick - 1;

		if (toPick == bucketSize) {
			smallest = 0;
		}
		else {
			smallest = bucket[lastIndex] + 1;
		}

		for (i = smallest; i < n; i++) {
			bucket[lastIndex + 1] = i;
			pick(n, bucket, bucketSize, toPick - 1, items);
		}
	}
}
